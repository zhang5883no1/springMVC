package cn.entity.newzhibo;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class NEWZhibo_CustomerTypeExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table xd_customer_type
     *
     * @mbggenerated Mon Sep 26 15:03:57 CST 2016
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table xd_customer_type
     *
     * @mbggenerated Mon Sep 26 15:03:57 CST 2016
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table xd_customer_type
     *
     * @mbggenerated Mon Sep 26 15:03:57 CST 2016
     */
    protected List<Criteria> oredCriteria;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table xd_customer_type
     *
     * @mbggenerated Mon Sep 26 15:03:57 CST 2016
     */
    protected Integer limitStart;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table xd_customer_type
     *
     * @mbggenerated Mon Sep 26 15:03:57 CST 2016
     */
    protected Integer limitEnd;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table xd_customer_type
     *
     * @mbggenerated Mon Sep 26 15:03:57 CST 2016
     */
    public NEWZhibo_CustomerTypeExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table xd_customer_type
     *
     * @mbggenerated Mon Sep 26 15:03:57 CST 2016
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table xd_customer_type
     *
     * @mbggenerated Mon Sep 26 15:03:57 CST 2016
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table xd_customer_type
     *
     * @mbggenerated Mon Sep 26 15:03:57 CST 2016
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table xd_customer_type
     *
     * @mbggenerated Mon Sep 26 15:03:57 CST 2016
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table xd_customer_type
     *
     * @mbggenerated Mon Sep 26 15:03:57 CST 2016
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table xd_customer_type
     *
     * @mbggenerated Mon Sep 26 15:03:57 CST 2016
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table xd_customer_type
     *
     * @mbggenerated Mon Sep 26 15:03:57 CST 2016
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table xd_customer_type
     *
     * @mbggenerated Mon Sep 26 15:03:57 CST 2016
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table xd_customer_type
     *
     * @mbggenerated Mon Sep 26 15:03:57 CST 2016
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table xd_customer_type
     *
     * @mbggenerated Mon Sep 26 15:03:57 CST 2016
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table xd_customer_type
     *
     * @mbggenerated Mon Sep 26 15:03:57 CST 2016
     */
    public void setLimitStart(Integer limitStart) {
        this.limitStart=limitStart;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table xd_customer_type
     *
     * @mbggenerated Mon Sep 26 15:03:57 CST 2016
     */
    public Integer getLimitStart() {
        return limitStart;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table xd_customer_type
     *
     * @mbggenerated Mon Sep 26 15:03:57 CST 2016
     */
    public void setLimitEnd(Integer limitEnd) {
        this.limitEnd=limitEnd;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table xd_customer_type
     *
     * @mbggenerated Mon Sep 26 15:03:57 CST 2016
     */
    public Integer getLimitEnd() {
        return limitEnd;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table xd_customer_type
     *
     * @mbggenerated Mon Sep 26 15:03:57 CST 2016
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Long value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Long value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Long value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Long value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Long value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Long value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Long> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Long> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Long value1, Long value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Long value1, Long value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andDeleteFlagIsNull() {
            addCriterion("DELETE_FLAG is null");
            return (Criteria) this;
        }

        public Criteria andDeleteFlagIsNotNull() {
            addCriterion("DELETE_FLAG is not null");
            return (Criteria) this;
        }

        public Criteria andDeleteFlagEqualTo(Integer value) {
            addCriterion("DELETE_FLAG =", value, "deleteFlag");
            return (Criteria) this;
        }

        public Criteria andDeleteFlagNotEqualTo(Integer value) {
            addCriterion("DELETE_FLAG <>", value, "deleteFlag");
            return (Criteria) this;
        }

        public Criteria andDeleteFlagGreaterThan(Integer value) {
            addCriterion("DELETE_FLAG >", value, "deleteFlag");
            return (Criteria) this;
        }

        public Criteria andDeleteFlagGreaterThanOrEqualTo(Integer value) {
            addCriterion("DELETE_FLAG >=", value, "deleteFlag");
            return (Criteria) this;
        }

        public Criteria andDeleteFlagLessThan(Integer value) {
            addCriterion("DELETE_FLAG <", value, "deleteFlag");
            return (Criteria) this;
        }

        public Criteria andDeleteFlagLessThanOrEqualTo(Integer value) {
            addCriterion("DELETE_FLAG <=", value, "deleteFlag");
            return (Criteria) this;
        }

        public Criteria andDeleteFlagIn(List<Integer> values) {
            addCriterion("DELETE_FLAG in", values, "deleteFlag");
            return (Criteria) this;
        }

        public Criteria andDeleteFlagNotIn(List<Integer> values) {
            addCriterion("DELETE_FLAG not in", values, "deleteFlag");
            return (Criteria) this;
        }

        public Criteria andDeleteFlagBetween(Integer value1, Integer value2) {
            addCriterion("DELETE_FLAG between", value1, value2, "deleteFlag");
            return (Criteria) this;
        }

        public Criteria andDeleteFlagNotBetween(Integer value1, Integer value2) {
            addCriterion("DELETE_FLAG not between", value1, value2, "deleteFlag");
            return (Criteria) this;
        }

        public Criteria andCreateByIsNull() {
            addCriterion("CREATE_BY is null");
            return (Criteria) this;
        }

        public Criteria andCreateByIsNotNull() {
            addCriterion("CREATE_BY is not null");
            return (Criteria) this;
        }

        public Criteria andCreateByEqualTo(Long value) {
            addCriterion("CREATE_BY =", value, "createBy");
            return (Criteria) this;
        }

        public Criteria andCreateByNotEqualTo(Long value) {
            addCriterion("CREATE_BY <>", value, "createBy");
            return (Criteria) this;
        }

        public Criteria andCreateByGreaterThan(Long value) {
            addCriterion("CREATE_BY >", value, "createBy");
            return (Criteria) this;
        }

        public Criteria andCreateByGreaterThanOrEqualTo(Long value) {
            addCriterion("CREATE_BY >=", value, "createBy");
            return (Criteria) this;
        }

        public Criteria andCreateByLessThan(Long value) {
            addCriterion("CREATE_BY <", value, "createBy");
            return (Criteria) this;
        }

        public Criteria andCreateByLessThanOrEqualTo(Long value) {
            addCriterion("CREATE_BY <=", value, "createBy");
            return (Criteria) this;
        }

        public Criteria andCreateByIn(List<Long> values) {
            addCriterion("CREATE_BY in", values, "createBy");
            return (Criteria) this;
        }

        public Criteria andCreateByNotIn(List<Long> values) {
            addCriterion("CREATE_BY not in", values, "createBy");
            return (Criteria) this;
        }

        public Criteria andCreateByBetween(Long value1, Long value2) {
            addCriterion("CREATE_BY between", value1, value2, "createBy");
            return (Criteria) this;
        }

        public Criteria andCreateByNotBetween(Long value1, Long value2) {
            addCriterion("CREATE_BY not between", value1, value2, "createBy");
            return (Criteria) this;
        }

        public Criteria andCreateDateIsNull() {
            addCriterion("CREATE_DATE is null");
            return (Criteria) this;
        }

        public Criteria andCreateDateIsNotNull() {
            addCriterion("CREATE_DATE is not null");
            return (Criteria) this;
        }

        public Criteria andCreateDateEqualTo(Date value) {
            addCriterion("CREATE_DATE =", value, "createDate");
            return (Criteria) this;
        }

        public Criteria andCreateDateNotEqualTo(Date value) {
            addCriterion("CREATE_DATE <>", value, "createDate");
            return (Criteria) this;
        }

        public Criteria andCreateDateGreaterThan(Date value) {
            addCriterion("CREATE_DATE >", value, "createDate");
            return (Criteria) this;
        }

        public Criteria andCreateDateGreaterThanOrEqualTo(Date value) {
            addCriterion("CREATE_DATE >=", value, "createDate");
            return (Criteria) this;
        }

        public Criteria andCreateDateLessThan(Date value) {
            addCriterion("CREATE_DATE <", value, "createDate");
            return (Criteria) this;
        }

        public Criteria andCreateDateLessThanOrEqualTo(Date value) {
            addCriterion("CREATE_DATE <=", value, "createDate");
            return (Criteria) this;
        }

        public Criteria andCreateDateIn(List<Date> values) {
            addCriterion("CREATE_DATE in", values, "createDate");
            return (Criteria) this;
        }

        public Criteria andCreateDateNotIn(List<Date> values) {
            addCriterion("CREATE_DATE not in", values, "createDate");
            return (Criteria) this;
        }

        public Criteria andCreateDateBetween(Date value1, Date value2) {
            addCriterion("CREATE_DATE between", value1, value2, "createDate");
            return (Criteria) this;
        }

        public Criteria andCreateDateNotBetween(Date value1, Date value2) {
            addCriterion("CREATE_DATE not between", value1, value2, "createDate");
            return (Criteria) this;
        }

        public Criteria andLastUpdateByIsNull() {
            addCriterion("LAST_UPDATE_BY is null");
            return (Criteria) this;
        }

        public Criteria andLastUpdateByIsNotNull() {
            addCriterion("LAST_UPDATE_BY is not null");
            return (Criteria) this;
        }

        public Criteria andLastUpdateByEqualTo(Long value) {
            addCriterion("LAST_UPDATE_BY =", value, "lastUpdateBy");
            return (Criteria) this;
        }

        public Criteria andLastUpdateByNotEqualTo(Long value) {
            addCriterion("LAST_UPDATE_BY <>", value, "lastUpdateBy");
            return (Criteria) this;
        }

        public Criteria andLastUpdateByGreaterThan(Long value) {
            addCriterion("LAST_UPDATE_BY >", value, "lastUpdateBy");
            return (Criteria) this;
        }

        public Criteria andLastUpdateByGreaterThanOrEqualTo(Long value) {
            addCriterion("LAST_UPDATE_BY >=", value, "lastUpdateBy");
            return (Criteria) this;
        }

        public Criteria andLastUpdateByLessThan(Long value) {
            addCriterion("LAST_UPDATE_BY <", value, "lastUpdateBy");
            return (Criteria) this;
        }

        public Criteria andLastUpdateByLessThanOrEqualTo(Long value) {
            addCriterion("LAST_UPDATE_BY <=", value, "lastUpdateBy");
            return (Criteria) this;
        }

        public Criteria andLastUpdateByIn(List<Long> values) {
            addCriterion("LAST_UPDATE_BY in", values, "lastUpdateBy");
            return (Criteria) this;
        }

        public Criteria andLastUpdateByNotIn(List<Long> values) {
            addCriterion("LAST_UPDATE_BY not in", values, "lastUpdateBy");
            return (Criteria) this;
        }

        public Criteria andLastUpdateByBetween(Long value1, Long value2) {
            addCriterion("LAST_UPDATE_BY between", value1, value2, "lastUpdateBy");
            return (Criteria) this;
        }

        public Criteria andLastUpdateByNotBetween(Long value1, Long value2) {
            addCriterion("LAST_UPDATE_BY not between", value1, value2, "lastUpdateBy");
            return (Criteria) this;
        }

        public Criteria andLastUpdateDateIsNull() {
            addCriterion("LAST_UPDATE_DATE is null");
            return (Criteria) this;
        }

        public Criteria andLastUpdateDateIsNotNull() {
            addCriterion("LAST_UPDATE_DATE is not null");
            return (Criteria) this;
        }

        public Criteria andLastUpdateDateEqualTo(Date value) {
            addCriterion("LAST_UPDATE_DATE =", value, "lastUpdateDate");
            return (Criteria) this;
        }

        public Criteria andLastUpdateDateNotEqualTo(Date value) {
            addCriterion("LAST_UPDATE_DATE <>", value, "lastUpdateDate");
            return (Criteria) this;
        }

        public Criteria andLastUpdateDateGreaterThan(Date value) {
            addCriterion("LAST_UPDATE_DATE >", value, "lastUpdateDate");
            return (Criteria) this;
        }

        public Criteria andLastUpdateDateGreaterThanOrEqualTo(Date value) {
            addCriterion("LAST_UPDATE_DATE >=", value, "lastUpdateDate");
            return (Criteria) this;
        }

        public Criteria andLastUpdateDateLessThan(Date value) {
            addCriterion("LAST_UPDATE_DATE <", value, "lastUpdateDate");
            return (Criteria) this;
        }

        public Criteria andLastUpdateDateLessThanOrEqualTo(Date value) {
            addCriterion("LAST_UPDATE_DATE <=", value, "lastUpdateDate");
            return (Criteria) this;
        }

        public Criteria andLastUpdateDateIn(List<Date> values) {
            addCriterion("LAST_UPDATE_DATE in", values, "lastUpdateDate");
            return (Criteria) this;
        }

        public Criteria andLastUpdateDateNotIn(List<Date> values) {
            addCriterion("LAST_UPDATE_DATE not in", values, "lastUpdateDate");
            return (Criteria) this;
        }

        public Criteria andLastUpdateDateBetween(Date value1, Date value2) {
            addCriterion("LAST_UPDATE_DATE between", value1, value2, "lastUpdateDate");
            return (Criteria) this;
        }

        public Criteria andLastUpdateDateNotBetween(Date value1, Date value2) {
            addCriterion("LAST_UPDATE_DATE not between", value1, value2, "lastUpdateDate");
            return (Criteria) this;
        }

        public Criteria andCustomerIdIsNull() {
            addCriterion("customer_id is null");
            return (Criteria) this;
        }

        public Criteria andCustomerIdIsNotNull() {
            addCriterion("customer_id is not null");
            return (Criteria) this;
        }

        public Criteria andCustomerIdEqualTo(Long value) {
            addCriterion("customer_id =", value, "customerId");
            return (Criteria) this;
        }

        public Criteria andCustomerIdNotEqualTo(Long value) {
            addCriterion("customer_id <>", value, "customerId");
            return (Criteria) this;
        }

        public Criteria andCustomerIdGreaterThan(Long value) {
            addCriterion("customer_id >", value, "customerId");
            return (Criteria) this;
        }

        public Criteria andCustomerIdGreaterThanOrEqualTo(Long value) {
            addCriterion("customer_id >=", value, "customerId");
            return (Criteria) this;
        }

        public Criteria andCustomerIdLessThan(Long value) {
            addCriterion("customer_id <", value, "customerId");
            return (Criteria) this;
        }

        public Criteria andCustomerIdLessThanOrEqualTo(Long value) {
            addCriterion("customer_id <=", value, "customerId");
            return (Criteria) this;
        }

        public Criteria andCustomerIdIn(List<Long> values) {
            addCriterion("customer_id in", values, "customerId");
            return (Criteria) this;
        }

        public Criteria andCustomerIdNotIn(List<Long> values) {
            addCriterion("customer_id not in", values, "customerId");
            return (Criteria) this;
        }

        public Criteria andCustomerIdBetween(Long value1, Long value2) {
            addCriterion("customer_id between", value1, value2, "customerId");
            return (Criteria) this;
        }

        public Criteria andCustomerIdNotBetween(Long value1, Long value2) {
            addCriterion("customer_id not between", value1, value2, "customerId");
            return (Criteria) this;
        }

        public Criteria andChatTimeIsNull() {
            addCriterion("chat_time is null");
            return (Criteria) this;
        }

        public Criteria andChatTimeIsNotNull() {
            addCriterion("chat_time is not null");
            return (Criteria) this;
        }

        public Criteria andChatTimeEqualTo(Long value) {
            addCriterion("chat_time =", value, "chatTime");
            return (Criteria) this;
        }

        public Criteria andChatTimeNotEqualTo(Long value) {
            addCriterion("chat_time <>", value, "chatTime");
            return (Criteria) this;
        }

        public Criteria andChatTimeGreaterThan(Long value) {
            addCriterion("chat_time >", value, "chatTime");
            return (Criteria) this;
        }

        public Criteria andChatTimeGreaterThanOrEqualTo(Long value) {
            addCriterion("chat_time >=", value, "chatTime");
            return (Criteria) this;
        }

        public Criteria andChatTimeLessThan(Long value) {
            addCriterion("chat_time <", value, "chatTime");
            return (Criteria) this;
        }

        public Criteria andChatTimeLessThanOrEqualTo(Long value) {
            addCriterion("chat_time <=", value, "chatTime");
            return (Criteria) this;
        }

        public Criteria andChatTimeIn(List<Long> values) {
            addCriterion("chat_time in", values, "chatTime");
            return (Criteria) this;
        }

        public Criteria andChatTimeNotIn(List<Long> values) {
            addCriterion("chat_time not in", values, "chatTime");
            return (Criteria) this;
        }

        public Criteria andChatTimeBetween(Long value1, Long value2) {
            addCriterion("chat_time between", value1, value2, "chatTime");
            return (Criteria) this;
        }

        public Criteria andChatTimeNotBetween(Long value1, Long value2) {
            addCriterion("chat_time not between", value1, value2, "chatTime");
            return (Criteria) this;
        }

        public Criteria andVideoTimeIsNull() {
            addCriterion("video_time is null");
            return (Criteria) this;
        }

        public Criteria andVideoTimeIsNotNull() {
            addCriterion("video_time is not null");
            return (Criteria) this;
        }

        public Criteria andVideoTimeEqualTo(Long value) {
            addCriterion("video_time =", value, "videoTime");
            return (Criteria) this;
        }

        public Criteria andVideoTimeNotEqualTo(Long value) {
            addCriterion("video_time <>", value, "videoTime");
            return (Criteria) this;
        }

        public Criteria andVideoTimeGreaterThan(Long value) {
            addCriterion("video_time >", value, "videoTime");
            return (Criteria) this;
        }

        public Criteria andVideoTimeGreaterThanOrEqualTo(Long value) {
            addCriterion("video_time >=", value, "videoTime");
            return (Criteria) this;
        }

        public Criteria andVideoTimeLessThan(Long value) {
            addCriterion("video_time <", value, "videoTime");
            return (Criteria) this;
        }

        public Criteria andVideoTimeLessThanOrEqualTo(Long value) {
            addCriterion("video_time <=", value, "videoTime");
            return (Criteria) this;
        }

        public Criteria andVideoTimeIn(List<Long> values) {
            addCriterion("video_time in", values, "videoTime");
            return (Criteria) this;
        }

        public Criteria andVideoTimeNotIn(List<Long> values) {
            addCriterion("video_time not in", values, "videoTime");
            return (Criteria) this;
        }

        public Criteria andVideoTimeBetween(Long value1, Long value2) {
            addCriterion("video_time between", value1, value2, "videoTime");
            return (Criteria) this;
        }

        public Criteria andVideoTimeNotBetween(Long value1, Long value2) {
            addCriterion("video_time not between", value1, value2, "videoTime");
            return (Criteria) this;
        }

        public Criteria andUsedVideoTimeIsNull() {
            addCriterion("used_video_time is null");
            return (Criteria) this;
        }

        public Criteria andUsedVideoTimeIsNotNull() {
            addCriterion("used_video_time is not null");
            return (Criteria) this;
        }

        public Criteria andUsedVideoTimeEqualTo(Long value) {
            addCriterion("used_video_time =", value, "usedVideoTime");
            return (Criteria) this;
        }

        public Criteria andUsedVideoTimeNotEqualTo(Long value) {
            addCriterion("used_video_time <>", value, "usedVideoTime");
            return (Criteria) this;
        }

        public Criteria andUsedVideoTimeGreaterThan(Long value) {
            addCriterion("used_video_time >", value, "usedVideoTime");
            return (Criteria) this;
        }

        public Criteria andUsedVideoTimeGreaterThanOrEqualTo(Long value) {
            addCriterion("used_video_time >=", value, "usedVideoTime");
            return (Criteria) this;
        }

        public Criteria andUsedVideoTimeLessThan(Long value) {
            addCriterion("used_video_time <", value, "usedVideoTime");
            return (Criteria) this;
        }

        public Criteria andUsedVideoTimeLessThanOrEqualTo(Long value) {
            addCriterion("used_video_time <=", value, "usedVideoTime");
            return (Criteria) this;
        }

        public Criteria andUsedVideoTimeIn(List<Long> values) {
            addCriterion("used_video_time in", values, "usedVideoTime");
            return (Criteria) this;
        }

        public Criteria andUsedVideoTimeNotIn(List<Long> values) {
            addCriterion("used_video_time not in", values, "usedVideoTime");
            return (Criteria) this;
        }

        public Criteria andUsedVideoTimeBetween(Long value1, Long value2) {
            addCriterion("used_video_time between", value1, value2, "usedVideoTime");
            return (Criteria) this;
        }

        public Criteria andUsedVideoTimeNotBetween(Long value1, Long value2) {
            addCriterion("used_video_time not between", value1, value2, "usedVideoTime");
            return (Criteria) this;
        }

        public Criteria andIsChatIsNull() {
            addCriterion("is_chat is null");
            return (Criteria) this;
        }

        public Criteria andIsChatIsNotNull() {
            addCriterion("is_chat is not null");
            return (Criteria) this;
        }

        public Criteria andIsChatEqualTo(Integer value) {
            addCriterion("is_chat =", value, "isChat");
            return (Criteria) this;
        }

        public Criteria andIsChatNotEqualTo(Integer value) {
            addCriterion("is_chat <>", value, "isChat");
            return (Criteria) this;
        }

        public Criteria andIsChatGreaterThan(Integer value) {
            addCriterion("is_chat >", value, "isChat");
            return (Criteria) this;
        }

        public Criteria andIsChatGreaterThanOrEqualTo(Integer value) {
            addCriterion("is_chat >=", value, "isChat");
            return (Criteria) this;
        }

        public Criteria andIsChatLessThan(Integer value) {
            addCriterion("is_chat <", value, "isChat");
            return (Criteria) this;
        }

        public Criteria andIsChatLessThanOrEqualTo(Integer value) {
            addCriterion("is_chat <=", value, "isChat");
            return (Criteria) this;
        }

        public Criteria andIsChatIn(List<Integer> values) {
            addCriterion("is_chat in", values, "isChat");
            return (Criteria) this;
        }

        public Criteria andIsChatNotIn(List<Integer> values) {
            addCriterion("is_chat not in", values, "isChat");
            return (Criteria) this;
        }

        public Criteria andIsChatBetween(Integer value1, Integer value2) {
            addCriterion("is_chat between", value1, value2, "isChat");
            return (Criteria) this;
        }

        public Criteria andIsChatNotBetween(Integer value1, Integer value2) {
            addCriterion("is_chat not between", value1, value2, "isChat");
            return (Criteria) this;
        }

        public Criteria andIsScrolIsNull() {
            addCriterion("is_scrol is null");
            return (Criteria) this;
        }

        public Criteria andIsScrolIsNotNull() {
            addCriterion("is_scrol is not null");
            return (Criteria) this;
        }

        public Criteria andIsScrolEqualTo(Integer value) {
            addCriterion("is_scrol =", value, "isScrol");
            return (Criteria) this;
        }

        public Criteria andIsScrolNotEqualTo(Integer value) {
            addCriterion("is_scrol <>", value, "isScrol");
            return (Criteria) this;
        }

        public Criteria andIsScrolGreaterThan(Integer value) {
            addCriterion("is_scrol >", value, "isScrol");
            return (Criteria) this;
        }

        public Criteria andIsScrolGreaterThanOrEqualTo(Integer value) {
            addCriterion("is_scrol >=", value, "isScrol");
            return (Criteria) this;
        }

        public Criteria andIsScrolLessThan(Integer value) {
            addCriterion("is_scrol <", value, "isScrol");
            return (Criteria) this;
        }

        public Criteria andIsScrolLessThanOrEqualTo(Integer value) {
            addCriterion("is_scrol <=", value, "isScrol");
            return (Criteria) this;
        }

        public Criteria andIsScrolIn(List<Integer> values) {
            addCriterion("is_scrol in", values, "isScrol");
            return (Criteria) this;
        }

        public Criteria andIsScrolNotIn(List<Integer> values) {
            addCriterion("is_scrol not in", values, "isScrol");
            return (Criteria) this;
        }

        public Criteria andIsScrolBetween(Integer value1, Integer value2) {
            addCriterion("is_scrol between", value1, value2, "isScrol");
            return (Criteria) this;
        }

        public Criteria andIsScrolNotBetween(Integer value1, Integer value2) {
            addCriterion("is_scrol not between", value1, value2, "isScrol");
            return (Criteria) this;
        }

        public Criteria andIsTopIsNull() {
            addCriterion("is_top is null");
            return (Criteria) this;
        }

        public Criteria andIsTopIsNotNull() {
            addCriterion("is_top is not null");
            return (Criteria) this;
        }

        public Criteria andIsTopEqualTo(Integer value) {
            addCriterion("is_top =", value, "isTop");
            return (Criteria) this;
        }

        public Criteria andIsTopNotEqualTo(Integer value) {
            addCriterion("is_top <>", value, "isTop");
            return (Criteria) this;
        }

        public Criteria andIsTopGreaterThan(Integer value) {
            addCriterion("is_top >", value, "isTop");
            return (Criteria) this;
        }

        public Criteria andIsTopGreaterThanOrEqualTo(Integer value) {
            addCriterion("is_top >=", value, "isTop");
            return (Criteria) this;
        }

        public Criteria andIsTopLessThan(Integer value) {
            addCriterion("is_top <", value, "isTop");
            return (Criteria) this;
        }

        public Criteria andIsTopLessThanOrEqualTo(Integer value) {
            addCriterion("is_top <=", value, "isTop");
            return (Criteria) this;
        }

        public Criteria andIsTopIn(List<Integer> values) {
            addCriterion("is_top in", values, "isTop");
            return (Criteria) this;
        }

        public Criteria andIsTopNotIn(List<Integer> values) {
            addCriterion("is_top not in", values, "isTop");
            return (Criteria) this;
        }

        public Criteria andIsTopBetween(Integer value1, Integer value2) {
            addCriterion("is_top between", value1, value2, "isTop");
            return (Criteria) this;
        }

        public Criteria andIsTopNotBetween(Integer value1, Integer value2) {
            addCriterion("is_top not between", value1, value2, "isTop");
            return (Criteria) this;
        }

        public Criteria andIsFontIsNull() {
            addCriterion("is_font is null");
            return (Criteria) this;
        }

        public Criteria andIsFontIsNotNull() {
            addCriterion("is_font is not null");
            return (Criteria) this;
        }

        public Criteria andIsFontEqualTo(Integer value) {
            addCriterion("is_font =", value, "isFont");
            return (Criteria) this;
        }

        public Criteria andIsFontNotEqualTo(Integer value) {
            addCriterion("is_font <>", value, "isFont");
            return (Criteria) this;
        }

        public Criteria andIsFontGreaterThan(Integer value) {
            addCriterion("is_font >", value, "isFont");
            return (Criteria) this;
        }

        public Criteria andIsFontGreaterThanOrEqualTo(Integer value) {
            addCriterion("is_font >=", value, "isFont");
            return (Criteria) this;
        }

        public Criteria andIsFontLessThan(Integer value) {
            addCriterion("is_font <", value, "isFont");
            return (Criteria) this;
        }

        public Criteria andIsFontLessThanOrEqualTo(Integer value) {
            addCriterion("is_font <=", value, "isFont");
            return (Criteria) this;
        }

        public Criteria andIsFontIn(List<Integer> values) {
            addCriterion("is_font in", values, "isFont");
            return (Criteria) this;
        }

        public Criteria andIsFontNotIn(List<Integer> values) {
            addCriterion("is_font not in", values, "isFont");
            return (Criteria) this;
        }

        public Criteria andIsFontBetween(Integer value1, Integer value2) {
            addCriterion("is_font between", value1, value2, "isFont");
            return (Criteria) this;
        }

        public Criteria andIsFontNotBetween(Integer value1, Integer value2) {
            addCriterion("is_font not between", value1, value2, "isFont");
            return (Criteria) this;
        }

        public Criteria andIsValidIsNull() {
            addCriterion("is_valid is null");
            return (Criteria) this;
        }

        public Criteria andIsValidIsNotNull() {
            addCriterion("is_valid is not null");
            return (Criteria) this;
        }

        public Criteria andIsValidEqualTo(Integer value) {
            addCriterion("is_valid =", value, "isValid");
            return (Criteria) this;
        }

        public Criteria andIsValidNotEqualTo(Integer value) {
            addCriterion("is_valid <>", value, "isValid");
            return (Criteria) this;
        }

        public Criteria andIsValidGreaterThan(Integer value) {
            addCriterion("is_valid >", value, "isValid");
            return (Criteria) this;
        }

        public Criteria andIsValidGreaterThanOrEqualTo(Integer value) {
            addCriterion("is_valid >=", value, "isValid");
            return (Criteria) this;
        }

        public Criteria andIsValidLessThan(Integer value) {
            addCriterion("is_valid <", value, "isValid");
            return (Criteria) this;
        }

        public Criteria andIsValidLessThanOrEqualTo(Integer value) {
            addCriterion("is_valid <=", value, "isValid");
            return (Criteria) this;
        }

        public Criteria andIsValidIn(List<Integer> values) {
            addCriterion("is_valid in", values, "isValid");
            return (Criteria) this;
        }

        public Criteria andIsValidNotIn(List<Integer> values) {
            addCriterion("is_valid not in", values, "isValid");
            return (Criteria) this;
        }

        public Criteria andIsValidBetween(Integer value1, Integer value2) {
            addCriterion("is_valid between", value1, value2, "isValid");
            return (Criteria) this;
        }

        public Criteria andIsValidNotBetween(Integer value1, Integer value2) {
            addCriterion("is_valid not between", value1, value2, "isValid");
            return (Criteria) this;
        }

        public Criteria andIsFloatIsNull() {
            addCriterion("is_float is null");
            return (Criteria) this;
        }

        public Criteria andIsFloatIsNotNull() {
            addCriterion("is_float is not null");
            return (Criteria) this;
        }

        public Criteria andIsFloatEqualTo(Integer value) {
            addCriterion("is_float =", value, "isFloat");
            return (Criteria) this;
        }

        public Criteria andIsFloatNotEqualTo(Integer value) {
            addCriterion("is_float <>", value, "isFloat");
            return (Criteria) this;
        }

        public Criteria andIsFloatGreaterThan(Integer value) {
            addCriterion("is_float >", value, "isFloat");
            return (Criteria) this;
        }

        public Criteria andIsFloatGreaterThanOrEqualTo(Integer value) {
            addCriterion("is_float >=", value, "isFloat");
            return (Criteria) this;
        }

        public Criteria andIsFloatLessThan(Integer value) {
            addCriterion("is_float <", value, "isFloat");
            return (Criteria) this;
        }

        public Criteria andIsFloatLessThanOrEqualTo(Integer value) {
            addCriterion("is_float <=", value, "isFloat");
            return (Criteria) this;
        }

        public Criteria andIsFloatIn(List<Integer> values) {
            addCriterion("is_float in", values, "isFloat");
            return (Criteria) this;
        }

        public Criteria andIsFloatNotIn(List<Integer> values) {
            addCriterion("is_float not in", values, "isFloat");
            return (Criteria) this;
        }

        public Criteria andIsFloatBetween(Integer value1, Integer value2) {
            addCriterion("is_float between", value1, value2, "isFloat");
            return (Criteria) this;
        }

        public Criteria andIsFloatNotBetween(Integer value1, Integer value2) {
            addCriterion("is_float not between", value1, value2, "isFloat");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table xd_customer_type
     *
     * @mbggenerated do_not_delete_during_merge Mon Sep 26 15:03:57 CST 2016
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table xd_customer_type
     *
     * @mbggenerated Mon Sep 26 15:03:57 CST 2016
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}